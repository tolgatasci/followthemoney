.. _types:

Property types
=================

Each property defined on a given schema has one of the data types below. The 
data types are all string-based, but define the semantics of the property.

.. contents:: Data types
    :local:

Type API
-------------

.. autoclass:: followthemoney.types.common.PropertyType
   :members:
   :undoc-members:
   :exclude-members: __init__, docs

.. autoclass:: followthemoney.types.common.EnumType
   :members:
   :undoc-members:

.. autoclass:: followthemoney.types.registry.Registry
   :members:
   :undoc-members:

{% for type in registry.types | sort(attribute='name') %}
.. _type-{{type.name}}:

{{type.label}}
------------------------------

.. option:: {{type.name}}: {{type.plural}}

    {{type.docs}}

    {% if type.REGEX_RAW -%}
    .. option:: pattern: {{type.REGEX_RAW}}
    {% endif %}
    {% if type.group %}
    .. option:: group: {{type.group}}

        see :py:attr:`followthemoney.types.common.PropertyType.group`
    {% endif %}
    {% if type.matchable %}
    .. option:: matchable: {{type.matchable}}
        
        see :py:attr:`followthemoney.types.common.PropertyType.matchable`
    {% endif %}
    {% if type.pivot %}
    .. option:: pivot: {{type.pivot}}

        see :py:attr:`followthemoney.types.common.PropertyType.pivot`
    {% endif %}
    {% if type.max_size %}
    .. option:: max_size: {{type.max_size}}

        see :py:attr:`followthemoney.types.common.PropertyType.max_size`
    {% endif %}


{% if type.names %}
.. list-table::
    :widths: 15 30
    :header-rows: 1

    * - Code value
      - Label
    {% for code, name in type.names.items() | sort %}
    * - ``{{code}}``
      - {{name}}
    {% endfor %}
{% endif %}

{% endfor %}
